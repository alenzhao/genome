#!/usr/bin/env genome-perl

#Written by Malachi Griffith

use strict;
use warnings;
use File::Basename;
use Cwd 'abs_path';

BEGIN {
    $ENV{UR_DBI_NO_COMMIT}               = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above "Genome";
use Test::More tests => 8;  #One per 'ok', 'is', etc. statement below
use Data::Dumper;

use Genome::Utility::Test;

use Genome::Test::Factory::Build;
use Genome::Test::Factory::Model::ClinSeq;
use Genome::Test::Factory::Model::RnaSeq;

my $pkg = 'Genome::Model::ClinSeq::Command::Converge::CufflinksDe';
use_ok($pkg) or die;

#Define the test where expected results are stored
my $expected_output_dir =  Genome::Utility::Test->data_dir_ok($pkg, '2016-05-10-expected');

#Create a temp dir for results
my $temp_dir = Genome::Sys->create_temp_directory();
ok($temp_dir, "created temp directory: $temp_dir") or die;

#Get a pair of rna-seq builds
my @builds = _prepare_clinseq_builds();

#Create converge cufflinks-de command and execute
#genome model clin-seq converge cufflinks-de --builds='id in [133577030,133611960]' --outdir=/tmp/converge_de/ --fc-cutoff=3

my $converge_cufflinks_de_cmd = $pkg->create(
    outdir                => $temp_dir,
    builds                => \@builds,
    fc_cutoff             => 3,
    bam_readcount_version => 0.6
);
$converge_cufflinks_de_cmd->queue_status_messages(1);
my $r1 = $converge_cufflinks_de_cmd->execute();
is($r1, 1, 'Testing for successful execution.  Expecting 1.  Got: ' . $r1);

#Dump the output to a log file
my @output1  = $converge_cufflinks_de_cmd->status_messages();
my $log_file = $temp_dir . "/ConvergeCufflinksDe.log.txt";
my $log      = IO::File->new(">$log_file");
$log->print(join("\n", @output1));
ok(-e $log_file, "Wrote message file from converge cufflinks-de to a log file: $log_file");

#The first time we run this we will need to save our initial result to diff against
#Genome::Sys->shellcmd(cmd => "cp -r -L $temp_dir/* $expected_output_dir");

#Perform a diff between the stored results and those generated by this test
my @diff = `diff -r -x '*.log.txt' $expected_output_dir $temp_dir`;
my $ok = ok(@diff == 0, "Found only expected number of differences between expected results and test results");
unless ($ok) {
    diag("expected: $expected_output_dir\nactual: $temp_dir\n");
    diag("differences are:");
    diag(@diff);
    my $diff_line_count = scalar(@diff);
    print "\n\nFound $diff_line_count differing lines\n\n";
    Genome::Sys->shellcmd(cmd => "rm -fr /tmp/last-converge-cufflinks-de/");
    Genome::Sys->shellcmd(cmd => "mv $temp_dir /tmp/last-converge-cufflinks-de");
}



sub _prepare_clinseq_builds {
    my $test_data_dir = Genome::Utility::Test->data_dir($pkg, '2016-05-10-test_data');

    my @builds;
    for my $i (1..2) {
        my $rna_model = Genome::Test::Factory::Model::RnaSeq->setup_object(
            name => 'rna test ' . $i,
        );
        $rna_model->subject->common_name('tumor');
        my $model = Genome::Test::Factory::Model::ClinSeq->setup_object(
            name => 'clinseq test ' . $i,
            tumor_rnaseq_model => $rna_model,
            subject => $rna_model->subject->source,
        );
        my $common_name = 'COMMON' . $i;
        $model->subject->common_name($common_name);

        my $rna_build = Genome::Test::Factory::Build->setup_object(model_id => $rna_model->id);
        $rna_build->status('Succeeded');

        my $dir = File::Spec->join($test_data_dir, $i);
        my $build = Genome::Test::Factory::Build->setup_object(model_id => $model->id, data_directory => $dir);

        isa_ok($build, 'Genome::Model::Build', 'created a test build');
        push @builds, $build;
    }

    return @builds;
}
