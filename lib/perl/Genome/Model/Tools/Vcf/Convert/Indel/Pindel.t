#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use File::Temp;

Genome::Config::set_env('workflow_builder_backend', 'inline');

my $total_mem_kb = Genome::Sys->mem_limit_kb;
if ($total_mem_kb < 2097152) { # Pindel requires about 2 gigs of memory
    plan skip_all => 'must be run on a machine with at least 2 gigabytes of memory';
}

plan tests => 9;

my $refseq_tmp_dir = File::Temp::tempdir(CLEANUP => 1);
no warnings;
use Genome::Model::Build::ReferenceSequence;
*Genome::Model::Build::ReferenceSequence::local_cache_basedir = sub { return $refseq_tmp_dir; };
*Genome::Model::Build::ReferenceSequence::copy_file = sub { 
    my ($build, $file, $dest) = @_;
    symlink($file, $dest) || die;
    return 1; 
};
use warnings;

use_ok('Genome::Model::Tools::Vcf::Convert::Indel::Pindel');

my $test_dir = Genome::Config::get('test_inputs') . "/Genome-Model-Tools-Vcf-Convert-Indel-Pindel";

my $expected_base = "expected.v4";
my $input_base    = "input";
my $expected_dir  = "$test_dir/$expected_base";
my $input_dir     = "$test_dir/$input_base";
my $expected_file = "$expected_dir/output.vcf.gz";
my $output_file   = Genome::Sys->create_temp_file_path("test.vcf.gz");
my $input_file    = "$input_dir/indels.hq";

my %params = (
    input_file => $input_file,
    output_file => $output_file,
    aligned_reads_sample         => "tumor",
    control_aligned_reads_sample => "normal",
    reference_sequence_build_id  => 101947881,
);

my $command = Genome::Model::Tools::Vcf::Convert::Indel::Pindel->create(%params); 

ok($command, 'Command created');
my $rv = $command->execute;
ok($rv, 'Command completed successfully');
ok(-s $output_file, "output file created");
compare_file($expected_file, $output_file);

#test TCGA vcf
my $expected_file2 = $expected_dir.'/TCGA_output.vcf.gz';
my $output_file2   = Genome::Sys->create_temp_file_path('test_TCGA.vcf.gz');

$params{output_file} = $output_file2;
$params{aligned_reads_sample} = 'TCGA-DS-A1OC-01A-11D-A14W-08';
$params{control_aligned_reads_sample} = 'TCGA-DS-A1OC-10A-01D-A14W-08';

$command = Genome::Model::Tools::Vcf::Convert::Indel::Pindel->create(%params);

ok($command, 'Command created');
$rv = $command->execute;
ok($rv, 'Command completed successfully');
ok(-s $output_file2, "TCGA output file created");

compare_file($expected_file2, $output_file2);

done_testing();

#The files will have a timestamp that will differ. Ignore this but check the rest.
sub compare_file {
    my ($expected_file, $out_file) = @_;
    my $expected = `zcat $expected_file | grep -v fileDate`;
    my $output   = `zcat $out_file | grep -v fileDate`;

    my $diff = Genome::Sys->diff_text_vs_text($output, $expected);
    ok(!$diff, 'output matched expected result') or diag("diff results:\n" . $diff);
    return 1;
}
