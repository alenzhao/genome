use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT}               = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above 'Genome';
use Genome::SoftwareResult;

use Test::More;
use Test::Exception;
use File::Compare qw(compare);
use File::Basename qw(basename);
use Genome::Utility::Test qw(compare_ok);
use Genome::File::Vcf::Differ;
use Genome::Test::Factory::SoftwareResult::User;
use Genome::Test::Data qw(get_test_file);

my $test_dir = __FILE__.".d";
my $version = '0.29.6';

my $output = Genome::Sys->create_temp_directory();

my $tumor_bam = get_test_file('HCC1395', 'H_NJ-HCC1395-HCC1395.20_42220611-42542245.realigned.bam');
my $normal_bam = get_test_file('HCC1395', 'H_NJ-HCC1395-HCC1395_BL.20_42220611-42542245.realigned.bam');
 
my $pkg = 'Genome::Model::Tools::DetectVariants2::Manta';
	
my $reference_fasta = get_test_file('HCC1395', '20_42220611-42542245.fa');
my $reference_fasta_index = get_test_file('HCC1395', '20_42220611-42542245.fa.fai');

my $reference_build = Genome::Test::Factory::Model::ReferenceSequence->setup_reference_sequence_build($reference_fasta);
symlink($reference_fasta,$reference_build->data_directory .'/all_sequences.fa');
symlink($reference_fasta_index,$reference_build->data_directory .'/all_sequences.fa.fai');

my $result_users = Genome::Test::Factory::SoftwareResult::User->setup_user_hash(reference_sequence_build_id => $reference_build->id,);

my $command = $pkg->create(
   output_directory => $output,
   reference_build_id => $reference_build->id,
   result_users => $result_users,
   aligned_reads_input => $tumor_bam,
   control_aligned_reads_input => $normal_bam,
   version => $version,
);

ok ($command->execute, 'Executed `gmt detect-variants2 manta` command');

my $differ = Genome::File::Vcf::Differ->new("$output/svs.hq.vcf.gz", "$test_dir/svs.hq.vcf.gz");
my $diff = $differ->diff;
is ($diff, undef, "Found No differences between $output/svs.hq.sv.vcf.gz and (expected) $test_dir/svs.hq.sv.vcf.gz") ||	diag $diff->to_string;

my $commandDie = $pkg->create(
   output_directory => $output,
   reference_build_id => $reference_build->id,
   result_users => $result_users,
   aligned_reads_input => "Bad.bam",
   control_aligned_reads_input => $normal_bam,
   version => $version,
);

dies_ok( sub {$commandDie->execute}, "Executing a command that I expect to fail");

done_testing();
