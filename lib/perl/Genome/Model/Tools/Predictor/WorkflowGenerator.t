#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

unless ($ENV{UR_RUN_LONG_TESTS}) {
    plan skip_all => 'takes a few minutes to execute, run with UR_RUN_LONG_TESTS';
}

use_ok('Genome::Model::Tools::Predictor::WorkflowGenerator') or die;
use_ok('Genome::Model::Tools::Predictor::StrategyParser') or die;
use_ok('Genome::Model::Tools::Predictor::Interproscan') or die;
use_ok('Genome::Model::Tools::Predictor::Psortb') or die;
use_ok('Genome::Model::Tools::Predictor::Keggscan') or die;

my $temp_output_dir = File::Temp::tempdir(
    'Genome-Model-Tools-Predictor-XXXXX',
    TMPDIR => 1,
    CLEANUP => 1,
);
ok(-d $temp_output_dir, 'created temp output directory');

my $test_data_dir = Genome::Config::get('test_inputs') . '/';
ok(-d $test_data_dir, "test data directory exists at $test_data_dir");

my $test_fasta_file = $test_data_dir . 'Genome-Model-Tools-Predictor/medium.fasta';
ok(-e $test_fasta_file, "test fasta file exists at $test_fasta_file");

### Create a simple workflow with a single predictor

my $simple_generator = Genome::Model::Tools::Predictor::WorkflowGenerator->create(
    strategy => 'psortb [] []',
    workflow_name => 'test',
    output_directory => $temp_output_dir,
    chunk_size => 10,
    input_fasta_file => $test_fasta_file,
    dump_workflow_xml_file => 1,
    gram_stain => 'positive',
    run_inline => 1,
);
ok($simple_generator, 'created workflow generator object');

my $simple_workflow = $simple_generator->generate_workflow;
ok($simple_workflow, 'created workflow');

ok(-e $simple_generator->workflow_xml_file_path, 'workflow xml file was successfully dumped to ' . $simple_generator->workflow_xml_file_path);

### Attempt to execute the simple workflow

my %inputs = $simple_generator->gather_inputs;
ok(%inputs, 'successfully generated inputs for simple workflow');

require Data::Dumper;
print Data::Dumper::Dumper(\%inputs) . "\n";

my $result = $simple_generator->start;
ok($result, 'successfully executed simple workflow');
ok($result->{bio_seq_features}, 'got bio seq features from workflow');

### Make a more complex workflow with two tools unioned together
# Note, not including keggscan here because it takes forever to execute

$temp_output_dir = Genome::Sys->create_temp_directory;
ok(-d $temp_output_dir, 'new temp output directory exists');

my $two_tool_generator = Genome::Model::Tools::Predictor::WorkflowGenerator->create(
    strategy => 'interproscan [-cli -appl hmmpfam -appl hmmtigr -goterms -verbose -iprlookup -seqtype p -format raw] [4.8] union psortb [] []',
    workflow_name => 'test',
    output_directory => $temp_output_dir,
    chunk_size => 10,
    input_fasta_file => $test_fasta_file,
    dump_workflow_xml_file => 1,
    gram_stain => 'positive',
    run_inline => 1,
);
ok($two_tool_generator, 'created workflow generator object for two tool strategy');

my $two_tool_workflow = $two_tool_generator->generate_workflow;
ok($two_tool_workflow, 'created workflow object for two tool strategy');

ok(-e $two_tool_generator->workflow_xml_file_path, 'workflow xml file was successfully dumped');

### Now try to execute the two tool workflow

%inputs = $two_tool_generator->gather_inputs;
ok(%inputs, 'successfully generated inputs for two tool workflow');

$result = $two_tool_generator->start;
ok($result, 'successfuly executed two tool workflow');

ok(UR::Context->commit, 'successfully committed');

done_testing();
