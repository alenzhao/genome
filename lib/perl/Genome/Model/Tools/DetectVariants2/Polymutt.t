#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use strict;
use warnings;

use above 'Genome';

use Genome::Test::Factory::Model::ReferenceSequence;
use Genome::Test::Factory::InstrumentData::Solexa;

use Test::More tests => 11;

use_ok('Genome::Model::Tools::DetectVariants2::::Polymutt');
my $version = "0.02";

my $refseq = Genome::Test::Factory::Model::ReferenceSequence->setup_reference_sequence_build;
my $instrument_data = Genome::Test::Factory::InstrumentData::Solexa->setup_object;
my @test_alignment_results;
for my $i (-3..-1) {
    my $result = Genome::InstrumentData::AlignmentResult::Merged->__define__(
        id => $_,
        reference_build => $refseq,
    );
    Genome::SoftwareResult::Input->create(
        software_result => $result,
        name => 'instrument_data_id-0',
        value_id => $instrument_data->id,
        value_class_name => 'UR::Value::Number',
    );
    push @test_alignment_results, $result;
}
is(scalar(@test_alignment_results), 3, "Got 3 test alignment results");

my $test_data_dir = Genome::Config::get('test_inputs') . '/Genome-Model-Tools-DetectVariants2-Polymutt';
my $ped_file = "$test_data_dir/DS10239.ped";
my $expected_dir = join('/', $test_data_dir, 'expected.v1');

my $detector_directory = join('/', $test_data_dir, 'polymutt-0.02');

my $expected_denovo_vcf_file = join('/', $expected_dir, 'snvs.denovo.vcf.gz');
my $expected_standard_vcf_file = join('/', $expected_dir, 'snvs.standard.vcf.gz');
my $expected_dat_file = join('/', $expected_dir, 'polymutt.dat');
my $expected_glfindex_file = join('/', $expected_dir, 'polymutt.glfindex');
my $expected_merged_vcf = join('/', $expected_dir, 'snvs.vcf.gz');

ok(-s $expected_denovo_vcf_file, "expected denovo vcf file output $expected_denovo_vcf_file exists");
ok(-s $expected_standard_vcf_file, "expected standard vcf file output $expected_standard_vcf_file exists");
ok(-s $expected_dat_file, "expected dat file output $expected_dat_file exists");
ok(-s $expected_glfindex_file, "expected glfindex file output $expected_glfindex_file exists");
ok(-s $expected_merged_vcf, "expected merged vcf file output $expected_merged_vcf exists");

my $output_dir = File::Temp::tempdir('DetectVariants2-PolymuttXXXXX', CLEANUP => 1, TMPDIR => 1);
my $output_denovo_vcf = join('/', $output_dir, 'snvs.denovo.vcf.gz');
my $output_standard_vcf = join('/', $output_dir, 'snvs.standard.vcf.gz');
my $output_dat = join('/', $output_dir, 'polymutt.dat');
my $output_glfindex = join('/', $output_dir, 'polymutt.glfindex');
my $output_merged_vcf = join("/", $output_dir, 'snvs.vcf.gz');
my $reference = Genome::Model::Build::ImportedReferenceSequence->get_by_name('NCBI-human-build36');
is($reference->id,101947881, 'Found correct reference sequence');

my $detector_command = Genome::Model::Tools::DetectVariants2::Polymutt->create(
    version => $version,
    alignment_results => \@test_alignment_results,
    output_directory => $output_dir,
    reference_build_id => $reference->id,
    pedigree_file_path => $ped_file,
    params => '',
);
isa_ok($detector_command, 'Genome::Model::Tools::DetectVariants2::Polymutt', 'created detector command');

my $wf = $detector_command->_create_workflow();
isa_ok($wf, 'Genome::WorkflowBuilder::DAG', 'created workflow');

my ($glfs_wf) = $detector_command->_create_glfs_workflow(@test_alignment_results);
isa_ok($glfs_wf, 'Genome::WorkflowBuilder::DAG', 'created glf workflow');

